{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "sron",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "statement"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "integer"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "boolean"
        },
        {
          "type": "STRING",
          "value": "null"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "STRING",
              "value": "[]"
            }
          ]
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "namespace_identifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bool_expression"
        },
        {
          "type": "SYMBOL",
          "name": "null_expression"
        },
        {
          "type": "SYMBOL",
          "name": "integer_expression"
        },
        {
          "type": "SYMBOL",
          "name": "float_expression"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "array_expression"
        }
      ]
    },
    "bool_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "null_expression": {
      "type": "STRING",
      "value": "null"
    },
    "integer_expression": {
      "type": "PATTERN",
      "value": "(0|-?[1-9][0-9]*)(e[0-9]+)?"
    },
    "float_expression": {
      "type": "PATTERN",
      "value": "(0|-?[1-9][0-9]*)(\\.[0-9]*)?(e[+-]?[0-9]+)?"
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "'.*'"
        },
        {
          "type": "PATTERN",
          "value": "\".*\""
        },
        {
          "type": "PATTERN",
          "value": "'''(.|\\n)*'''"
        },
        {
          "type": "PATTERN",
          "value": "\"\"\"(.|\\n)*\"\"\""
        }
      ]
    },
    "array_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "expression"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "value_definition"
        }
      ]
    },
    "value_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "namespace_identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "type"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\/\\/.*"
        },
        {
          "type": "PATTERN",
          "value": "#.*"
        },
        {
          "type": "PATTERN",
          "value": "\\/\\*(?:.)*\\*\\/"
        }
      ]
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "definition_statement"
        }
      ]
    },
    "definition_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "value_definition"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}